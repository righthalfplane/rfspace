// SPDX-License-Identifier: (GPL-2.0 OR X11)
/*
 * National Instruments Ettus Research Project Neon Rev1
 *
 * Copyright (c) 2018 National Instruments Corp.
 *
 */

/dts-v1/;

#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/gpio/gpio.h>
#include "zynq-7000.dtsi"

/ {
	model = "NI Ettus Research Project Neon SDR";
	compatible = "ettus,zynq-neon-rev1", "xlnx,zynq-7000";

	aliases {
		ethernet0 = &gem0;
		serial0 = &uart0;
		serial1 = &uart1;
		spi0 = &spi0;
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		i2c2 = &tun;
	};

	memory {
		device_type = "memory";
		reg = <0x0 0x40000000>;
	};

        chosen {
		
		/* we have taken the original bootargs from the default device tree and we have added the cma to it. */
		
                bootargs = "console=ttyPS0,115200 earlycon  rw cma=256M";
                stdout-path = "serial0:115200n8";
        };

	gpio-keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;

		power-button {
			label = "Power Button";
			linux,code = <KEY_POWER>;
			gpios = <&gpio0 1 GPIO_ACTIVE_HIGH>;
		};
	};

	gpio-poweroff {
		compatible = "gpio-poweroff";
		gpios = <&gpio0 2 GPIO_ACTIVE_LOW>;
	};

	usb_phy0: phy0 {
		compatible = "usb-nop-xceiv";
		#phy-cells = <0>;
		reset-gpios = <&gpio0 8 GPIO_ACTIVE_LOW>;
	};

};

&cpu0 {
	operating-points = <1000000 1000000>;
};

&sdhci0 {
	status = "okay";
};

&uart0 {
	status = "okay";
};

&uart1 {
	status = "okay";
};

/* we use the ARM global timer */
&ttc0 {
	status = "disabled";
};

/* we use the ARM global timer */
&ttc1 {
	status = "disabled";
};

&i2c1 {
	status = "okay";
	clock-frequency = <400000>;

	rtc0: rtc@68 {
		compatible = "dallas,ds1374";
		reg = <0x68>;
		reset-on-timeout;
		trickle-resistor-ohms = <250>;
		trickle-diode-disable;
		timeout-sec = <10>;
	};

	tpm: tpm@29 {
		compatible = "atmel,at97sc3205t", "atmel,at97sc3204t";
		reg = <0x29>;
		reset-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;
	};

	mpu9250@69 {
		compatible = "invensense,mpu9250";
		reg = <0x69>;
		interrupt-parent = <&gpio0>;
		interrupts = <50 IRQ_TYPE_EDGE_RISING>;
		/* TOOO: Check edge vs level interrupt */
	};
};

&i2c0 {
	status = "okay";
	clock-frequency = <400000>;

	embedded-controller@1e {
		status = "okay";
		reg = <0x1e>;
		compatible = "ni,embedded-controller-i2c",
			     "google,cros-ec-i2c";
		interrupts = <0 IRQ_TYPE_EDGE_FALLING>;
		interrupt-parent = <&gpio0>;
		google,has-vbc-nvram;

		wakeup-source;
               thermal: thermal {
                       compatible = "google,cros-ec-thermal";
               };

		tun: i2c-tunnel {
			compatible = "google,cros-ec-i2c-tunnel";
			#address-cells = <1>;
			#size-cells = <0>;
			google,remote-bus = <0>;
			clock-frequency = <100000>;

			eeprom@50 {
				compatible = "at24,24c02";
				reg = <0x50>;
				#address-cells = <1>;
				#size-cells = <0>;
				read-only;

				eth0_addr: eth-addr@24 {
					reg = <0x24 0x6>;
				};

				eth1_addr: eth-addr@2c {
					reg = <0x2c 0x6>;
				};
			};
		};
	};
};

&gpio0 {
	status = "okay";
};

&clkc {
	ps-clk-frequency = <33333333>;
	fclk-enable = <0xf>;
};

/* Disabled, because runtime instantiation of cs-gpio property
 * does not work if driver is instantiated
 */
&spi0 {
	status = "disabled";
};

/* Disabled, because runtime instantiation of cs-gpio property
 * does not work if driver is instantiated
 */
&spi1 {
	status = "disabled";
};

&gem0 {
	status = "okay";
	phy-mode = "rgmii-id";
	phy-handle = <&ethernet_phy>;

	ethernet_phy: ethernet-phy@0 {
		reg = <0>;
		device_type = "ethernet-phy";
	};
};

&usb0 {
	status = "okay";
	dr_mode = "host";
	usb-phy = <&usb_phy0>;
};

&amba {
	ocm: sram@fffc0000 {
		compatible = "mmio-sram";
		reg = <0xfffc0000 0x10000>;
	};
};


&fpga_full {
	uio@40010000 {
		compatible = "usrp-uio";
		reg = <0x40010000 0x2000>;
		reg-names = "mboard-regs";
		status = "okay";
	};

	uio@40014000 {
		compatible = "usrp-uio";
		reg = <0x40014000 0x4000>;
		reg-names = "dboard-regs";
		status = "okay";
	};

	// nixge_internal: ethernet@40020000 {
	// 	#address-cells = <1>;
	// 	#size-cells = <1>;
	// 	compatible = "ni,xge-enet-3.00";
	// 	reg = <0x40020000 0x4000
	// 	       0x40030000 0x2000>;
	// 	reg-names = "dma", "ctrl";
	// 		clocks = <&clkc 15>;
	// 		clock-names = "bus_clk";

	// 	interrupts = <0 31 4>, <0 32 4>;
	// 	interrupt-names = "rx", "tx";
	// 	interrupt-parent = <&intc>;
	// 	status = "okay";

	// 	phy-mode = "internal";
	// 	local-mac-address = <0x00 0x01 0x02 0x03 0x04 0x05>;

	// 	fixed-link {
	// 		speed = <1000>;
	// 		full-duplex;
	// 	};
	// };

	uio@40032000 {
		compatible = "usrp-uio";
		reg = <0x40032000 0x2000>;
		reg-names = "misc-enet-int-regs";
		status = "okay";
	};

	// nixge0: ethernet@40000000 {
	// 	compatible = "ni,xge-enet-2.00";
	// 	reg = <0x40000000 0x6000>;

	// 	clocks = <&clkc 15>;
	// 	clock-names = "bus_clk";

	// 	nvmem-cells = <&eth1_addr>;
	// 	nvmem-cell-names = "address";

	// 	interrupts = <0 29 4>, <0 30 4>;
	// 	interrupt-names = "rx", "tx";
	// 	interrupt-parent = <&intc>;
	// 	status = "okay";

	// 	phy-mode = "xgmii";

	// 	fixed-link {
	// 		speed = <1000>;
	// 		full-duplex;
	// 		/* 114 = 54 (MIOs) + 60 (EMIO 60) */
	// 		// link-gpios = <&gpio0 114 0>;
	// 	};
	// };

	// uio@40006000 {
	// 	compatible = "usrp-uio";
	// 	reg = <0x40006000 0x2000>; // FIXME: Addresses
	// 	reg-names = "misc-enet-regs";
	// 	status = "okay";
	// };


	axi_dma_0: dma@40400000 {
		#dma-cells = <1>;
		clock-names = "s_axi_lite_aclk m_axi_mm2s_aclk m_axi_s2mm_aclk";
		clocks = <&clkc 15>, <&clkc 15>, <&clkc 15>;
		compatible = "microphase,axi_dma_ctrl-1.0";
		interrupt-names = "mm2s_introut s2mm_introut";
		interrupt-parent = <&intc>;
		interrupts = <0 29 4 0 30 4>;
		reg = <0x40400000 0x10000>;
		xlnx,addrwidth = <0x20>;
		xlnx,sg-length-width = <0x16>;
		// dma-channel@40400000 {
		// 	compatible = "xlnx,axi-dma-mm2s-channel";
		// 	dma-channels = <0x1>;
		// 	interrupts = <0 29 4>;
		// 	xlnx,datawidth = <0x20>;
		// 	xlnx,device-id = <0x0>;
		// 	xlnx,include-dre ;
		// };
		// dma-channel@40400030 {
		// 	compatible = "xlnx,axi-dma-s2mm-channel";
		// 	dma-channels = <0x1>;
		// 	interrupts = <0 30 4>;
		// 	xlnx,datawidth = <0x20>;
		// 	xlnx,device-id = <0x0>;
		// 	xlnx,include-dre ;
		// };
	};

};
